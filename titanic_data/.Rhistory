3+1
library(datasets)
ls()
character(0)
library("datasets")
ls()
library(datasets)
?beaver1
dataset = beaver1
View(dataset)
View(dataset)
ls()
dataset
datasets
ls()
data1 = volcano
ls()
data1
names(data1)
dataset
temperature <- dataset['temp']
mean(temperature)
typeof(temperature)
typeof(temperature[1])
typeof(temperature[[1]])
temperature
mean([1,2])
mean(1,2)
mean(1,3)
typeof(datasets)
ls()
typeof(dataset)
mean([1,2,3,4])
mylist <- [1,4,5,6]
mean(list(1,2))
mylist <- list(1,2,3,4)
mean(mylist)
typeof(list[1])
typeof(mylist[1])
typeof(mylist[[1]])
temp <- vector(temperature)
temperature
c(temperature)
temp <- c(temperature)
mean(temp)
typeof(temp)
dataset
mean(temperature)
temperature
typeof(temperature[1])
typeof(temperature[[1]])
v <- c(1,3)
mean(v)
mean(as.vector(temperature))
temp <- as.vector(temperature)
temp
typeof(temp)
temp <- as.array(temperature)
temp <- c(temperature)
View(temp)
mean(temp)
dataset
dataset$temp
mean(dataset$temp)
temper <- dataset[['temp']]
mean(temper)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
head(mydataset)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
class(mydataset$approval.date)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
print(as.date(first_approval_date-25569))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rm(mydataset, first_approval_date)
source('~/.active-rstudio-document', echo=TRUE)
print(class(mydataset[,5]))
print(class(mydataset[,6]))
print(class(mydataset[,7]))
mydataset <- read.csv(file="/Users/juan/Downloads/JCdatasetforCS112\ -\ TA (1).csv", header=TRUE, sep=",")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
print(class(mydataset1[,4]))
summary(mydataset)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
mydataset$cumulative.disbursements <- as.numeric(mydataset$cumulative.disbursements)
for (i in 1:length(names(mydataset))) {
print(class(mydataset[,i]))
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
mydataset <- mydataset[-to_be_excluded, ]
to_be_excluded
print(to_be_excluded)
?which
myvector1 <- as.Date("1995-02-10","1997-03-15","1993-05-20")
myvector1
myvector1 <- as.Date(c("1995-02-10","1997-03-15","1993-05-20"))
myvector1
pene <- myvector1 < as.Date("1995-01-01")
myvector1 <- as.Date(c("1995-02-10","1997-03-15","1993-05-20", "1996-12-30"))
pene <- myvector1 < as.Date("1995-01-01") & myvector1 > as.Date("1996-12-31")
pene <- myvector1
myvector1 <- as.Date(c("1995-02-10","1997-03-15","1993-05-20", "1996-12-30"))
pene <- myvector1 < as.Date("1995-01-01") & myvector1 > as.Date("1996-12-31")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rm(mysubdatset)
ls()
source('~/.active-rstudio-document', echo=TRUE)
?set.seed()
set.seed(1)
set.seed(2)
print(set.seed(3))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
quantile(mydataset1)
quantile(mydataset1, na.rm = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
TRUE | FALSE
FALSE | FALSE
source('~/Documents/GitHub/r-minerva/CSS112 Assignment 1.R', echo=TRUE)
library(ISLR)
install.packages(ISLR)
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
ls()
source('~/Documents/GitHub/r-minerva/cs112 pre-class1 3.2.R', echo=TRUE)
source('~/Documents/GitHub/r-minerva/cs112 pre-class1 3.2.R', echo=TRUE)
load(Smarket)
install.packages("MASS")
install.packages("MASS")
library("MASS")
library("MASS")
load(Smarket)
data("Smarket")
source('~/Documents/GitHub/r-minerva/cs112 pre-class1 3.2.R', echo=TRUE)
install.packages("MASS")
install.packages(https://CRAN.R-project.org/package=ISLR)
install.packages("https://CRAN.R-project.org/package=ISLR")
install.packages("/Users/juan/Downloads/ISLR_1.2.tar.gz")
install.packages("/Users/juan/Downloads/ISLR_1.2\ \(1\).tgz")
install.packages("/Users/juan/Downloads/ISLR_1.2.1.tgz")
install.packages("/Users/juan/Downloads/ISLR_1.2.tar.gz")
install.packages("Matching")
lalonde <- data(lalonde)
names(lalonde)
lalonde
data(lalonde)
data(lalonde)
install.packages("Matching")
library(Matching)
library(Matching)
data(lalonde)
names(lalonde)
dim(lalonde)
summary(lalonde)
cor(lalonde)
library(MASS)
data(Prima.tr)
data("Pima.tr")
data("Pima.te")
Pima.te
Pima.tr
glm.fit <- glm(type ~ bmi+age + bmi*age, data = Pima.tr, family = binomial)
summary(glm.fit)
source('~/Documents/GitHub/r-minerva/cs112 pre-class1 3.2.R', echo=TRUE)
predicted_probs <- predict(glm.fit, type = "response")
predicted_ys <- rep(0, length(predicted_probs))
predicted_ys[predicted_probs > 0.5] = 1
table(predicted_ys, Pima.tr$type)
source('~/Documents/GitHub/r-minerva/cs112 pre-class1 3.2.R', echo=TRUE)
source('~/Documents/GitHub/r-minerva/cs112 pre-class1 3.2.R', echo=TRUE)
for (i in 1:10) {
predicted_ys[predicted_probs > i/10] = 1
table(predicted_ys, Pima.tr$type)
}
source('~/Documents/GitHub/r-minerva/cs112 pre-class1 3.2.R', echo=TRUE)
source('~/Documents/GitHub/r-minerva/cs112 pre-class1 3.2.R', echo=TRUE)
source('~/Documents/GitHub/r-minerva/cs112 pre-class1 3.2.R', echo=TRUE)
source('~/Documents/GitHub/r-minerva/cs112 pre-class1 3.2.R', echo=TRUE)
table(predicted_ys, Pima.te$type)
length(predicted_probs)
length(predicted_probs)
predicted_probs_test <- predict(glm.fit, newdata = Pima.te, type = "response")
source('~/Documents/GitHub/r-minerva/cs112 pre-class1 3.2.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
curve(20*x*log(x), 1, 100000)
curve(20*x*log(x), 1, 1000000)
curve(20*x*log(x), 1, 1000)
curve(x*log(x), 1, 1000)
curve(log(x), 1, 1000)
curve(x*log(x), 1, 100000)
curve(x*log2(x), 1, 100000)
source('~/Documents/GitHub/r-minerva/cs112 pre-class1 3.2.R', echo=TRUE)
mydata <- read.dta("/Users/juan/Downloads/turnout.dta")
mydata <- read.dta("/Users/juan/Downloads/turnout.dta")
source('~/.active-rstudio-document', echo=TRUE)
mydata <- read.dta("/Users/juan/Downloads/turnout.dta")
source('~/.active-rstudio-document', echo=TRUE)
dataset[1,1]
dataset$agesqrd[1]
lm2 <- glm(turnout ~ white + age + educate + income + agesqrd, familiy = binomial, data = dataset)
lm2 <- glm(turnout ~ white + age + educate + income + agesqrd, family = binomial, data = dataset)
lm2$coefficients
XB <- sum(coef(lm2)*(1,38,12,4,0.01*age^2))
XB <- sum(coef(lm2)*(1,38,12,4,0.01*38^2)))
XB <- sum(coef(lm2)*c(1,38,12,4,0.01*38^2))
XB <- sum(coef(lm2)*c(1, 0, 38, 12, 4, 0.01*38^2))
XB
p
p <-  exp(XB) / (1 + exp(XB))
p
XB2 <- sum(coef(lm2)*c(1, 0, 38, 16, 4, 0.01*38^2))
p2 <-  exp(XB) / (1 + exp(XB))
p2
XB2 <- sum(coef(lm2)*c(1, 0, 38, 16, 4, 0.01*38^2))
p2 <-  exp(XB2) / (1 + exp(XB2))
p2
XB3 <- sum(coef(lm2)*c(1, mean(dataset$white), 38, 12, mean(dataset$income), 0.01*38^2))
p3 <-  exp(XB3) / (1 + exp(XB3))
p3
p3 <-  exp(XB3) / (1 + exp(XB3))
XB3 <- sum(coef(lm2)*c(1, mean(dataset$white), 38, 16, mean(dataset$income), 0.01*38^2))
p3 <-  exp(XB3) / (1 + exp(XB3))
p3
sim(lm2, n.sim=1000)
library(foreign)
sim(lm2, n.sim=1000)
sim(lm2, n.sim=1000)
install.packages("foreign")
install.packages("foreign")
library(foreign)
sim(lm2, n.sim=1000)
sim(lm2, n.sim=1000)
sim(lm2, n.sim=1000)
sim(lm2, n.sim=1000)
sims <- sim(lm2, n.sim=1000)
library(arm)
sims <- sim(lm2, n.sim=1000)
sims
sims <- sim(lm2, n.sim=1000)
sims
storage <- c()
for (i in 1:1000) {
storage[i] <- exp(sum(sims[i,]*Xs))/(1 + exp(sum(sims[i,]*Xs)))
}
sims <- sim(lm2, n.sim=1000)
sims
storage <- c()
for (i in 1:1000) {
storage[i] <- exp(sum(sims.coefs[i,]*Xs))/(1 + exp(sum(sims.coefs[i,]*Xs)))
}
sims <- sim(lm2, n.sim=1000)
sims
storage <- c()
for (i in 1:1000) {
storage[i] <- exp(sum(sims.coef[i,]*Xs))/(1 + exp(sum(sims.coef[i,]*Xs)))
}
sims$coef
sims@coef
names(sims)
sims.coef <- coef(sims)
storage <- c()
for (i in 1:1000) {
storage[i] <- exp(sum(sims.coef[i,]*Xs))/(1 + exp(sum(sims.coef[i,]*Xs)))
}
Xs <- c(1, mean(dataset$white), 38, 16, mean(dataset$income), 0.01*38^2)
library(arm)
sims <- sim(lm2, n.sim=1000)
sims.coef <- coef(sims)
storage <- c()
for (i in 1:1000) {
storage[i] <- exp(sum(sims.coef[i,]*Xs))/(1 + exp(sum(sims.coef[i,]*Xs)))
}
quantile(storage, probs = c(0.005, 0.995))
storagedf_12 <- dfstorage <- matrix(NA, nrow = 1000, ncol = 78) # for ages 18:95, thus 78
for(age in c(18:95)) {
for(i in 1:1000) {
beta <-  sum(sims.coef[i,]*(c(1, mean(dataset$white), age, 16, mean(dataset$income), 0.01*age^2)))
storagedf_12[i, age - 17] <- exp(beta)/(1 + exp(beta))
}
}
conf.intervals <- apply(storagedf_12, 2, quantile, probs = c(0.005, 0.995))
storagedf_12 <- dfstorage <- matrix(NA, nrow = 1000, ncol = 78) # for ages 18:95, thus 78
conf.intervals
library(ISLR)
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("Matching", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("arm", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(ISLR)
set.seed(1)
train=sample(392,192)
library(ISLR)
detach("package:Matching", unload=TRUE)
data(Auto)
install.packages('ISLR')
library(ISLR)
set.seed(1)
train=sample(392,192)
lm.fit = lm(mpg ~ horsepower, data = Auto, subset = train)
?attach
attach(Auto)
mean((mpg ~ predict(lm.fit, Auto))[-train]^2)
mean((mpg - predict(lm.fit, Auto))[-train]^2)
lm.fit2 = lm(mpg ~ poly(horsepower, 2), data = Auto, subset = train)
mean((mpg - predict(lm.fit2,Auto))[-train]^2)
library(boot)
library(arm)
mysample <- rnorm(15,0,1)
library(tree)
library("tree")
install.packages('tree')
library(tree)
library("ISLR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(ISLR)
attach(Carseats )
High=ifelse(Sales <=8,"No","Yes ")
Carseats =data.frame(Carseats ,High)
tree.carseats =tree(High∼.-Sales , Carseats )
tree.carseats =tree (High∼.-Sales , Carseats )
tree.carseats =tree (High∼-Sales , Carseats )
tree.carseats = tree(High∼.-Sales , Carseats )
tree.carseats = tree(High∼-Sales , Carseats )
?tree
?lm
tree.carseats = tree(High ∼ -Sales , Carseats )
?lm
tree.carseats = tree(High ∼ Sales , Carseats )
tree.carseats = tree(High ∼ Sales , Carseats )
tree.carseats = tree(High ∼ -Sales , Carseats)
tree.carseats = tree(High∼-Sales , Carseats)
tree.carseats =tree(High∼.-Sales , Carseats )
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
tree.carseats =tree(High~.-Sales , Carseats )
summary(tree.carseats )
tree.carseats =tree(High~.-Sales , Carseats )
tree.carseats =tree(High~.-Sales , data = Carseats)
summary(tree.carseats )
High=ifelse(Sales <=8,"No","Yes ")
Carseats =data.frame(Carseats ,High)
tree.carseats =tree(High~.-Sales , data = Carseats)
tree.carseats =tree(High~-Sales , data = Carseats)
tree.carseats =tree(High~.-Sales , data = Carseats)
Carseats = data.frame(Carseats ,High)
Carseats = data.frame(Carseats ,High)
tree.carseats =tree(High~.-Sales , data = Carseats)
summary(tree.carseats )
summary(tree.carseats )
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
summary(tree.lalonde)
tree.lalonde =tree(u75~ age+educ, lalonde, method = "class")
plot(tree.lalonde)
text(tree.lalonde, pretty = 0)
tree.lalonde =tree(u75~ re75, lalonde, method = "class")
summary(tree.lalonde)
plot(tree.lalonde)
text(tree.lalonde, pretty = 0)
lalonde$re75
which(lalonde$u75 > 0)
notzero <- which(lalonde$u75 > 0)
lalonde$u75[notzero]
min(lalonde$re75[notzero])
lalonde$re75[notzero]
notzero <- which(lalonde$re75 > 0)
notzero <- which(lalonde$re75 > 0)
lalonde$u75[notzero]
lalonde$u75[-notzero]
lalonde$u75[notzero]
min(lalonde$re75[notzero])
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("tree")
(tree)
(tree)
install.packages('tree')
library(tree)
library(ISLR)
attach(Carseats)
High=ifelse(Sales <=8,"No","Yes ")
tree.carseats =tree(High~.-Sales , Carseats ,subset=train)
source('~/Documents/GitHub/r-minerva/tutorialgisttitanic.R', echo=TRUE)
source('~/Documents/GitHub/r-minerva/tutorialgisttitanic.R', echo=TRUE)
install.packages("randomForest")
